Nama: Corporate Finance Hub
Jenis: Sistem Keuangan Perusahaan (Corporate Financial Platform)
Pengguna:
Perusahaan klien besar (NGT, Toyota, Telkom)

Internal staf (Admin, Relationship Manager, Compliance Officer, dsb)

Fitur & Modul Utama Aplikasi
1. Otentikasi & Perizinan
-Multi-role login (Client, Admin, RM, Finance Controller)

-2FA dan role-based access

-Approval Matrix (tiap transaksi harus lolos hierarki)

2. Cash Management
Virtual Account

-Real-time cash position

-Cash pooling (gabung saldo dari banyak akun)

-Scheduled payment & sweeping

3. Payment & Collection
Bulk payment (payroll, vendor)

-Invoicing & e-collection

-Auto reconciliation

-QRIS & VA integration

4. Trade Finance
Letter of Credit (L/C)

-SKBDN, Invoice Financing

-Import/Export Tracking

-Document Exchange & Approval

5. Treasury & FX
-Foreign Exchange Transactions

-Hedging tools

-FX rate monitor

-Intercompany settlement

6. Tax & Compliance
-E-faktur / PPN export

-Laporan keuangan untuk regulator (BI, OJK)

-Anti-money laundering module (AML/CFT check)

7. Analytic Dashboard
-Cash flow forecast

-Multi-dimensional reporting

-Transaction risk scoring

-Heatmap transaksi mencurigakan

====================================================================

database postgreSQL :

-- Schema untuk otentikasi dan perizinan
CREATE SCHEMA auth;

-- Tabel users untuk menyimpan data pengguna
CREATE TABLE auth.users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(255) UNIQUE NOT NULL,
    password_hash TEXT NOT NULL,
    email VARCHAR(255) UNIQUE,
    phone_number VARCHAR(20),
    role VARCHAR(50) CHECK (role IN ('client', 'admin', 'rm', 'finance_controller')) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Tabel untuk menyimpan data Two-Factor Authentication
CREATE TABLE auth.two_factor_auth (
    user_id INT REFERENCES auth.users(user_id) ON DELETE CASCADE,
    secret_key TEXT NOT NULL,
    is_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id)
);

-- Tabel approval matrix
CREATE TABLE auth.approval_matrix (
    role VARCHAR(50) NOT NULL,
    min_approval_level INT NOT NULL,
    max_approval_level INT NOT NULL,
    PRIMARY KEY (role)
);

-- ---------------------------------------------------
-- ---------------------------------------------------

-- Schema untuk cash management
CREATE SCHEMA cash_management;

-- Tabel virtual accounts untuk masing-masing client
CREATE TABLE cash_management.virtual_accounts (
    va_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES auth.users(user_id) ON DELETE CASCADE,
    account_number VARCHAR(20) UNIQUE NOT NULL,
    currency VARCHAR(3) NOT NULL,
    balance DECIMAL(20, 2) DEFAULT 0.00,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Tabel untuk transaksi kas (cash position)
CREATE TABLE cash_management.cash_positions (
    position_id SERIAL PRIMARY KEY,
    va_id INT REFERENCES cash_management.virtual_accounts(va_id) ON DELETE CASCADE,
    transaction_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    amount DECIMAL(20, 2) NOT NULL,
    transaction_type VARCHAR(20) CHECK (transaction_type IN ('debit', 'credit')),
    balance_after DECIMAL(20, 2) NOT NULL
);

-- Tabel untuk scheduled payment (sweeping)
CREATE TABLE cash_management.scheduled_payments (
    payment_id SERIAL PRIMARY KEY,
    va_id INT REFERENCES cash_management.virtual_accounts(va_id),
    amount DECIMAL(20, 2) NOT NULL,
    payment_date DATE NOT NULL,
    status VARCHAR(50) CHECK (status IN ('pending', 'completed', 'failed')),
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- ---------------------------------------------------
-- ---------------------------------------------------

-- Schema untuk pembayaran dan koleksi
CREATE SCHEMA payments_collections;

-- Tabel untuk bulk payments
CREATE TABLE payments_collections.bulk_payments (
    payment_id SERIAL PRIMARY KEY,
    sender_va_id INT REFERENCES cash_management.virtual_accounts(va_id),
    receiver_va_id INT REFERENCES cash_management.virtual_accounts(va_id),
    total_amount DECIMAL(20, 2) NOT NULL,
    payment_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50) CHECK (status IN ('pending', 'completed', 'failed'))
);

-- Tabel untuk invoice dan e-collection
CREATE TABLE payments_collections.invoices (
    invoice_id SERIAL PRIMARY KEY,
    client_id INT REFERENCES auth.users(user_id),
    amount DECIMAL(20, 2) NOT NULL,
    due_date DATE NOT NULL,
    status VARCHAR(50) CHECK (status IN ('unpaid', 'paid', 'overdue'))
);

-- Tabel untuk auto reconciliation
CREATE TABLE payments_collections.reconciliations (
    reconciliation_id SERIAL PRIMARY KEY,
    invoice_id INT REFERENCES payments_collections.invoices(invoice_id),
    transaction_id INT REFERENCES cash_management.cash_positions(position_id),
    amount DECIMAL(20, 2) NOT NULL,
    reconciliation_status VARCHAR(50) CHECK (reconciliation_status IN ('reconciled', 'pending', 'discrepancy'))
);

-- ---------------------------------------------------
-- ---------------------------------------------------

-- Schema untuk trade finance
CREATE SCHEMA trade_finance;

-- Tabel untuk Letter of Credit (L/C)
CREATE TABLE trade_finance.letter_of_credit (
    lc_id SERIAL PRIMARY KEY,
    client_id INT REFERENCES auth.users(user_id),
    amount DECIMAL(20, 2) NOT NULL,
    issue_date DATE NOT NULL,
    expiry_date DATE NOT NULL,
    status VARCHAR(50) CHECK (status IN ('open', 'closed', 'expired'))
);

-- Tabel untuk Invoice Financing
CREATE TABLE trade_finance.invoice_financing (
    invoice_id SERIAL PRIMARY KEY,
    client_id INT REFERENCES auth.users(user_id),
    amount DECIMAL(20, 2) NOT NULL,
    financing_status VARCHAR(50) CHECK (financing_status IN ('approved', 'pending', 'rejected')),
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Tabel untuk Import/Export tracking
CREATE TABLE trade_finance.import_export_tracking (
    tracking_id SERIAL PRIMARY KEY,
    shipment_id VARCHAR(255),
    shipment_date DATE NOT NULL,
    origin VARCHAR(100),
    destination VARCHAR(100),
    current_status VARCHAR(100)
);

-- ---------------------------------------------------
-- ---------------------------------------------------

-- Schema untuk treasury dan FX
CREATE SCHEMA treasury_fx;

-- Tabel transaksi FX
CREATE TABLE treasury_fx.fx_transactions (
    fx_transaction_id SERIAL PRIMARY KEY,
    client_id INT REFERENCES auth.users(user_id),
    from_currency VARCHAR(3) NOT NULL,
    to_currency VARCHAR(3) NOT NULL,
    amount DECIMAL(20, 2) NOT NULL,
    exchange_rate DECIMAL(10, 6),
    transaction_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Tabel untuk intercompany settlement
CREATE TABLE treasury_fx.intercompany_settlements (
    settlement_id SERIAL PRIMARY KEY,
    sender_company INT REFERENCES auth.users(user_id),
    receiver_company INT REFERENCES auth.users(user_id),
    amount DECIMAL(20, 2) NOT NULL,
    settlement_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50) CHECK (status IN ('pending', 'completed', 'failed'))
);

-- ---------------------------------------------------
-- ---------------------------------------------------

-- Schema untuk pajak dan kepatuhan
CREATE SCHEMA tax_compliance;

-- Tabel untuk e-faktur / PPN export
CREATE TABLE tax_compliance.e_faktur (
    faktur_id SERIAL PRIMARY KEY,
    client_id INT REFERENCES auth.users(user_id),
    amount DECIMAL(20, 2) NOT NULL,
    tax_rate DECIMAL(5, 2),
    status VARCHAR(50) CHECK (status IN ('pending', 'filed', 'rejected'))
);

-- Tabel untuk laporan keuangan regulator
CREATE TABLE tax_compliance.regulatory_reports (
    report_id SERIAL PRIMARY KEY,
    report_type VARCHAR(50),
    client_id INT REFERENCES auth.users(user_id),
    report_data JSONB,
    report_date DATE NOT NULL,
    submission_status VARCHAR(50) CHECK (submission_status IN ('submitted', 'pending', 'rejected'))
);

-- Tabel untuk Anti-money laundering (AML)
CREATE TABLE tax_compliance.aml_checks (
    check_id SERIAL PRIMARY KEY,
    client_id INT REFERENCES auth.users(user_id),
    transaction_id INT REFERENCES payments_collections.bulk_payments(payment_id),
    status VARCHAR(50) CHECK (status IN ('approved', 'flagged', 'rejected'))
);

-- ---------------------------------------------------
-- ---------------------------------------------------

-- Schema untuk dashboard analitik
CREATE SCHEMA analytics;

-- Tabel untuk cash flow forecast
CREATE TABLE analytics.cash_flow_forecasts (
    forecast_id SERIAL PRIMARY KEY,
    client_id INT REFERENCES auth.users(user_id),
    forecast_date DATE NOT NULL,
    forecast_amount DECIMAL(20, 2) NOT NULL,
    actual_amount DECIMAL(20, 2),
    forecast_accuracy DECIMAL(5, 2)
);

-- Tabel untuk laporan risiko transaksi
CREATE TABLE analytics.transaction_risk_scores (
    risk_id SERIAL PRIMARY KEY,
    transaction_id INT REFERENCES payments_collections.bulk_payments(payment_id),
    risk_score DECIMAL(5, 2),
    status VARCHAR(50) CHECK (status IN ('low', 'medium', 'high'))
);

-- Tabel untuk heatmap transaksi mencurigakan
CREATE TABLE analytics.transaction_heatmap (
    heatmap_id SERIAL PRIMARY KEY,
    transaction_id INT REFERENCES payments_collections.bulk_payments(payment_id),
    suspicious_score DECIMAL(5, 2),
    flagged BOOLEAN DEFAULT FALSE
);

====================================================================

Backend :

src/
├── config/
│   └── db.ts
├── graphql/
│   ├── resolvers/
│   │   └── index.ts  # merge semua resolvers dari modules
│   ├── schemas/
│   │   └── index.ts  # merge semua typeDefs dari modules
│   ├── types/
│   │   └── index.ts  # types global kalo ada
│   └── modules/
│       ├── auth/
│       │   ├── users/
│       │   │   ├── user.resolver.ts
│       │   │   ├── user.schema.ts
│       │   │   ├── user.service.ts
│       │   │   └── user.types.ts
│       │   ├── two_factor_auth/
│       │   │   └── ...
│       │   └── approval_matrix/
│       │       └── ...
│       # --------------------
│       ├── cash_management/
│       │   ├── virtual_accounts/
│       │   │   └── ...
│       │   ├── cash_positions/
│       │   │   └── ...
│       │   └── scheduled_payments/
│       │       └── ...
│       # --------------------
│       ├── payments_collections/
│       │   ├── bulk_payments/
│       │   │   └── ...
│       │   ├── invoices/
│       │   │   └── ...
│       │   └── reconciliations/
│       │       └── ...
│       # --------------------
│       ├── trade_finance/
│       │   ├── letter_of_credit/
│       │   │   └── ...
│       │   ├── invoice_financing/
│       │   │   └── ...
│       │   └── import_export_tracking/
│       │       └── ...
│       # --------------------
│       ├── treasury_fx/
│       │   ├── fx_transactions/
│       │   │   └── ...
│       │   └── intercompany_settlements/
│       │       └── ...
│       # --------------------
│       ├── tax_compliance/
│       │   ├── e_faktur/
│       │   │   └── ...
│       │   ├── regulatory_reports/
│       │   │   └── ...
│       │   └── aml_checks/
│       │       └── ...
│       # --------------------
│       ├── analytics/
│       │   ├── cash_flow_forecasts/
│       │   │   └── ...
│       │   ├── transaction_risk_scores/
│       │   │   └── ...
│       │   └── transaction_heatmap/
│       │       └── ...
├── utils/
│   └── auth.ts
└── server.ts


Frontend :

frontend/
├── public/
│   ├── assets/
│   │   ├── images/
│   │   │   ├── logo.svg
│   │   │   └── favicon.ico
│   │   └── fonts/
│   └── locales/
│       ├── en/
│       └── id/
├── src/
│   ├── app/
│   │   ├── layout.tsx
│   │   ├── page.tsx
│   │   ├── error.tsx
│   │   ├── loading.tsx
│   │   ├── not-found.tsx
│   │   ├── login/
│   │   │   └── page.tsx
│   │   ├── register/
│   │   │   └── page.tsx
│   │   ├── dashboard/
│   │   │   └── page.tsx
│   │   ├── auth/
│   │   │   ├── users/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       ├── page.tsx
│   │   │   │       └── edit/
│   │   │   │           └── page.tsx
│   │   │   ├── two-factor-auth/
│   │   │   │   ├── page.tsx
│   │   │   │   └── [userId]/
│   │   │   │       └── page.tsx
│   │   │   └── approval-matrix/
│   │   │       ├── page.tsx
│   │   │       └── [role]/
│   │   │           └── page.tsx
│   │   ├── cash-management/
│   │   │   ├── virtual-accounts/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       ├── page.tsx
│   │   │   │       └── edit/
│   │   │   │           └── page.tsx
│   │   │   ├── cash-positions/
│   │   │   │   ├── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       └── page.tsx
│   │   │   └── scheduled-payments/
│   │   │       ├── page.tsx
│   │   │       ├── create/
│   │   │       │   └── page.tsx
│   │   │       └── [id]/
│   │   │           ├── page.tsx
│   │   │           └── edit/
│   │   │               └── page.tsx
│   │   ├── payments-collections/
│   │   │   ├── bulk-payments/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       └── page.tsx
│   │   │   ├── invoices/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       ├── page.tsx
│   │   │   │       └── edit/
│   │   │   │           └── page.tsx
│   │   │   └── reconciliations/
│   │   │       ├── page.tsx
│   │   │       └── [id]/
│   │   │           └── page.tsx
│   │   ├── trade-finance/
│   │   │   ├── letter-of-credit/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       ├── page.tsx
│   │   │   │       └── edit/
│   │   │   │           └── page.tsx
│   │   │   ├── invoice-financing/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       └── page.tsx
│   │   │   └── import-export-tracking/
│   │   │       ├── page.tsx
│   │   │       ├── create/
│   │   │       │   └── page.tsx
│   │   │       └── [id]/
│   │   │           ├── page.tsx
│   │   │           └── edit/
│   │   │               └── page.tsx
│   │   ├── treasury-fx/
│   │   │   ├── fx-transactions/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       └── page.tsx
│   │   │   └── intercompany-settlements/
│   │   │       ├── page.tsx
│   │   │       ├── create/
│   │   │       │   └── page.tsx
│   │   │       └── [id]/
│   │   │           └── page.tsx
│   │   ├── tax-compliance/
│   │   │   ├── e-faktur/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       ├── page.tsx
│   │   │   │       └── edit/
│   │   │   │           └── page.tsx
│   │   │   ├── regulatory-reports/
│   │   │   │   ├── page.tsx
│   │   │   │   ├── create/
│   │   │   │   │   └── page.tsx
│   │   │   │   └── [id]/
│   │   │   │       └── page.tsx
│   │   │   └── aml-checks/
│   │   │       ├── page.tsx
│   │   │       └── [id]/
│   │   │           └── page.tsx
│   │   └── analytics/
│   │       ├── cash-flow-forecasts/
│   │       │   ├── page.tsx
│   │       │   └── [clientId]/
│   │       │       └── page.tsx
│   │       ├── transaction-risk-scores/
│   │       │   ├── page.tsx
│   │       │   └── [id]/
│   │       │       └── page.tsx
│   │       └── transaction-heatmap/
│   │           └── page.tsx
│   ├── components/
│   │   ├── layout/
│   │   │   ├── Header.tsx
│   │   │   ├── Sidebar.tsx
│   │   │   ├── Footer.tsx
│   │   │   ├── MainLayout.tsx
│   │   │   └── AuthLayout.tsx
│   │   ├── ui/
│   │   │   ├── Button.tsx
│   │   │   ├── Input.tsx
│   │   │   ├── Select.tsx
│   │   │   ├── Checkbox.tsx
│   │   │   ├── Radio.tsx
│   │   │   ├── Table.tsx
│   │   │   ├── Modal.tsx
│   │   │   ├── Card.tsx
│   │   │   ├── Tabs.tsx
│   │   │   ├── Badge.tsx
│   │   │   ├── Alert.tsx
│   │   │   ├── Drawer.tsx
│   │   │   ├── Dropdown.tsx
│   │   │   ├── Pagination.tsx
│   │   │   ├── Toast.tsx
│   │   │   ├── Tooltip.tsx
│   │   │   └── Skeleton.tsx
│   │   └── modules/
│   │       ├── auth/
│   │       │   ├── LoginForm.tsx
│   │       │   ├── RegisterForm.tsx
│   │       │   ├── UserForm.tsx
│   │       │   ├── UserList.tsx
│   │       │   ├── UserDetails.tsx
│   │       │   ├── TwoFactorAuthForm.tsx
│   │       │   └── ApprovalMatrixForm.tsx
│   │       ├── cash-management/
│   │       │   ├── VirtualAccountForm.tsx
│   │       │   ├── VirtualAccountList.tsx
│   │       │   ├── VirtualAccountDetails.tsx
│   │       │   ├── CashPositionTable.tsx
│   │       │   ├── CashPositionDetails.tsx
│   │       │   ├── ScheduledPaymentForm.tsx
│   │       │   └── ScheduledPaymentList.tsx
│   │       ├── payments-collections/
│   │       │   ├── BulkPaymentForm.tsx
│   │       │   ├── BulkPaymentList.tsx
│   │       │   ├── BulkPaymentDetails.tsx
│   │       │   ├── InvoiceForm.tsx
│   │       │   ├── InvoiceList.tsx
│   │       │   ├── InvoiceDetails.tsx
│   │       │   ├── ReconciliationTable.tsx
│   │       │   └── ReconciliationDetails.tsx
│   │       ├── trade-finance/
│   │       │   ├── LetterOfCreditForm.tsx
│   │       │   ├── LetterOfCreditList.tsx
│   │       │   ├── LetterOfCreditDetails.tsx
│   │       │   ├── InvoiceFinancingForm.tsx
│   │       │   ├── InvoiceFinancingList.tsx
│   │       │   ├── ImportExportTrackingForm.tsx
│   │       │   └── ImportExportTrackingList.tsx
│   │       ├── treasury-fx/
│   │       │   ├── FxTransactionForm.tsx
│   │       │   ├── FxTransactionList.tsx
│   │       │   ├── FxTransactionDetails.tsx
│   │       │   ├── IntercompanySettlementForm.tsx
│   │       │   └── IntercompanySettlementList.tsx
│   │       ├── tax-compliance/
│   │       │   ├── EFakturForm.tsx
│   │       │   ├── EFakturList.tsx
│   │       │   ├── EFakturDetails.tsx
│   │       │   ├── RegulatoryReportForm.tsx
│   │       │   ├── RegulatoryReportList.tsx
│   │       │   ├── AmlChecksForm.tsx
│   │       │   └── AmlChecksList.tsx
│   │       └── analytics/
│   │           ├── CashFlowForecastChart.tsx
│   │           ├── CashFlowForecastFilter.tsx
│   │           ├── TransactionRiskScoreTable.tsx
│   │           ├── TransactionRiskScoreFilter.tsx
│   │           ├── TransactionHeatmapChart.tsx
│   │           └── TransactionHeatmapFilter.tsx
│   ├── graphql/
│   │   ├── codegen/
│   │   │   └── generated.ts
│   │   ├── auth/
│   │   │   ├── users.queries.ts
│   │   │   ├── users.mutations.ts
│   │   │   ├── two-factor-auth.queries.ts
│   │   │   ├── two-factor-auth.mutations.ts
│   │   │   ├── approval-matrix.queries.ts
│   │   │   └── approval-matrix.mutations.ts
│   │   ├── cash-management/
│   │   │   ├── virtual-accounts.queries.ts
│   │   │   ├── virtual-accounts.mutations.ts
│   │   │   ├── cash-positions.queries.ts
│   │   │   ├── cash-positions.mutations.ts
│   │   │   ├── scheduled-payments.queries.ts
│   │   │   └── scheduled-payments.mutations.ts
│   │   ├── payments-collections/
│   │   │   ├── bulk-payments.queries.ts
│   │   │   ├── bulk-payments.mutations.ts
│   │   │   ├── invoices.queries.ts
│   │   │   ├── invoices.mutations.ts
│   │   │   ├── reconciliations.queries.ts
│   │   │   └── reconciliations.mutations.ts
│   │   ├── trade-finance/
│   │   │   ├── letter-of-credit.queries.ts
│   │   │   ├── letter-of-credit.mutations.ts
│   │   │   ├── invoice-financing.queries.ts
│   │   │   ├── invoice-financing.mutations.ts
│   │   │   ├── import-export-tracking.queries.ts
│   │   │   └── import-export-tracking.mutations.ts
│   │   ├── treasury-fx/
│   │   │   ├── fx-transactions.queries.ts
│   │   │   ├── fx-transactions.mutations.ts
│   │   │   ├── intercompany-settlements.queries.ts
│   │   │   └── intercompany-settlements.mutations.ts
│   │   ├── tax-compliance/
│   │   │   ├── e-faktur.queries.ts
│   │   │   ├── e-faktur.mutations.ts
│   │   │   ├── regulatory-reports.queries.ts
│   │   │   ├── regulatory-reports.mutations.ts
│   │   │   ├── aml-checks.queries.ts
│   │   │   └── aml-checks.mutations.ts
│   │   └── analytics/
│   │       ├── cash-flow-forecasts.queries.ts
│   │       ├── transaction-risk-scores.queries.ts
│   │       └── transaction-heatmap.queries.ts
│   ├── lib/
│   │   ├── apollo-client.ts
│   │   ├── auth.ts
│   │   ├── hooks/
│   │   │   ├── useAuth.ts
│   │   │   ├── useForm.ts
│   │   │   └── useToast.ts
│   │   └── utils/
│   │       ├── date.ts
│   │       ├── currency.ts
│   │       ├── validators.ts
│   │       └── format.ts
│   ├── types/
│   │   ├── auth.ts
│   │   ├── cash-management.ts
│   │   ├── payments-collections.ts
│   │   ├── trade-finance.ts
│   │   ├── treasury-fx.ts
│   │   ├── tax-compliance.ts
│   │   └── analytics.ts
│   ├── styles/
│   │   ├── globals.css
│   │   └── themes/
│   │       ├── light.css
│   │       └── dark.css
│   └── constants/
│       ├── routes.ts
│       ├── permissions.ts
│       └── menu.ts
├── .env.local
├── .env.development
├── .env.production
├── .gitignore
├── next.config.js
├── tailwind.config.js
├── tsconfig.json
├── codegen.ts
└── package.json